tosca_definitions_version: cloudify_dsl_1_3

node_types:

  custom.device:
    derived_from: cloudify.nodes.Root
    properties:
      use_external_resource:
        default: { get_input: use_existing_device }
      global_device_type:
        default: null
    interfaces:
      cloudify.interfaces.lifecycle:
        create: chaining-plugin.chain.tasks.create_device
        start:
          # Map the single plugin task to the start operation
          implementation: chaining-plugin.chain.tasks.start_device
          inputs:
              # start_device accepts two properties named device_type and bandwidth
              # Inject these properties from the user's inputs.
              device_type:
                default: { get_input: device_type }
              bandwidth:
                default: { get_input: device_network_bandwidth }
        stop: chaining-plugin.chain.tasks.stop_device

  custom.device_component:
    derived_from: cloudify.nodes.Root
    properties:
      use_external_resource:
        default: false
      component_type:
        type: string
        default: PRIMARY_TYPE_NODE
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          # here we map the single plugin task to the start operation
          implementation: chaining-plugin.chain.tasks.start_component
          inputs:
              # start_component accepts a single property named device_type
              # Inject this property from the user's input.
              device_type:
                default: "Generic vCPE"
        stop: chaining-plugin.chain.tasks.stop_component

plugins:
   chaining-plugin:
      executor: central_deployment_agent
      source: chaining-plugin-folder
