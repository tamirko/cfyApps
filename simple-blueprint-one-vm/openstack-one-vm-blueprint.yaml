#######
# Simple blueprint to to launch a VM
#######
 
tosca_definitions_version: cloudify_dsl_1_3
 
imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.4/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.3/plugin.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.4/plugin.yaml
  #- plugins/plugin.yaml
 
inputs:
  agent_user:
    description: User name used when SSH-ing into the started machine
    default: ubuntu

  use_existing_agent_keypair: 
    description: Should we Use an existing keypair
    default: false

  agent_private_key_path:
    description: The agent Keypair on the manager
    default: ''

  agent_public_key_name:
    description: The name of the Keypair
    default: ''

  image:
    description: Openstack image name or id to use for the new server
    default: ''

  flavor:
    description: Openstack flavor name or id to use for the new server
    default: ''

  external_network_name:
    description: The external network of openstack 
    default: ''
  
  management_network_name: 
    description: The managemnet network that the VM will connect to
    default: ''

  vms_sec_group_name:
    description: The default security group of the VM
    default: 'default'


node_types:
 

  ###########################################################
  # We define a type that inherits openstack's default
  # server, and adds monitoring capabillities on top of it.
  ###########################################################

  onevm.nodes.MonitoredServer:
    derived_from: cloudify.openstack.nodes.Server
    properties:
      cloudify_agent:
        default:
          user: { get_input: agent_user }

      server:
        default:
          image: { get_input: image }
          flavor: { get_input: flavor }
          security_groups: [ { get_input: vms_sec_group_name } ]
          userdata: |
            #cloud-config
            bootcmd:
             - echo 172.17.170.177 cfy-mgr >> /etc/hosts
            packages:
             - wget


    interfaces:

      ###########################################################
      # We are infact telling cloudify to install a diamond
      # monitoring agent on the server.
      #
      # (see https://github.com/BrightcoveOS/Diamond)
      ###########################################################

      cloudify.interfaces.monitoring_agent:
          install:
            implementation: diamond.diamond_agent.tasks.install
            inputs:
              diamond_config:
                default:
                  interval: 1
          start: diamond.diamond_agent.tasks.start
          stop: diamond.diamond_agent.tasks.stop
          uninstall: diamond.diamond_agent.tasks.uninstall

      ###########################################################
      # Adding some collectors. These collectors are necessary
      # for the Cloudify UI to display the deafult metrics.
      ###########################################################

      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                default:
                  CPUCollector: {}
                  MemoryCollector: {}
                  LoadAverageCollector: {}
                  DiskUsageCollector:
                    config:
                      devices: x?vd[a-z]+[0-9]*$
                  NetworkCollector: {}



node_templates:
 
  agent_keypair:
      type: cloudify.openstack.nodes.KeyPair
      properties:
        use_external_resource: { get_input: use_existing_agent_keypair }
        resource_id: { get_input: agent_public_key_name }
        private_key_path: { get_input: agent_private_key_path }

  vms_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      security_group:
        name: { get_input: vms_sec_group_name }
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 22
        - remote_ip_prefix: 0.0.0.0/0
          port: 443
        - remote_ip_prefix: 0.0.0.0/0
          port: 80
        - remote_ip_prefix: 0.0.0.0/0
          port_range_min: 8000
          port_range_max: 65000
        - direction: egress
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 5000
          port_range_max: 65000

  VMHost:
    type: onevm.nodes.MonitoredServer
    properties:
      management_network_name: { get_input: management_network_name }
    relationships:
      - target: vms_security_group
        type: cloudify.openstack.server_connected_to_security_group

  server_sc:
    type: cloudify.nodes.SoftwareComponent
    relationships:
      - type: cloudify.relationships.contained_in
        target: VMHost
    interfaces:
     cloudify.interfaces.lifecycle:
        start: scripts/start-web.sh
    
 
outputs:
    server_endpoint:
        description: ip
        value:
            serverip: { get_attribute: [VMHost, ip] }
 
