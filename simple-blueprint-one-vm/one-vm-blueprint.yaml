#######
# Simple blueprint to to launch a VM
#######
 
tosca_definitions_version: cloudify_dsl_1_1
 
imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.3/plugin.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.4/plugin.yaml


inputs:
  agent_user:
    description: User name used when SSH-ing into the started machine
    default: ubuntu
  image:
    description: AWS image name or id to use for the new server
    default: 'ami-d05e75b8'

  size:
    description: AWS flavor name or id to use for the new server
    default: 't2.micro'

node_types:

  ###########################################################
  # We define a type that inherits openstack's default
  # server, and adds monitoring capabillities on top of it.
  ###########################################################

  onevm.nodes.MonitoredServer:
    derived_from: cloudify.aws.nodes.Instance
    properties:
      cloudify_agent:
        default:
          user: { get_input: agent_user }
          #key:  { get_input: agent_private_key_path }                            # no default value (globally configurable in bootstrap configuration)

      # server:
      #   default:
      #     image: { get_input: image }
      #     flavor: { get_input: flavor }



    interfaces:

      ###########################################################
      # We are infact telling cloudify to install a diamond
      # monitoring agent on the server.
      #
      # (see https://github.com/BrightcoveOS/Diamond)
      ###########################################################

      cloudify.interfaces.monitoring_agent:
          install:
            implementation: diamond.diamond_agent.tasks.install
            inputs:
              diamond_config:
                default:
                  interval: 10
          start: diamond.diamond_agent.tasks.start
          stop: diamond.diamond_agent.tasks.stop
          uninstall: diamond.diamond_agent.tasks.uninstall

      ###########################################################
      # Adding some collectors. These collectors are necessary
      # for the Cloudify UI to display the deafult metrics.
      ###########################################################

      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                default:
                  CPUCollector: {}
                  MemoryCollector: {}
                  LoadAverageCollector: {}
                  DiskUsageCollector:
                    config:
                      devices: x?vd[a-z]+[0-9]*$
                  NetworkCollector: {}



node_templates:

  # agent_keypair:
  #     type: cloudify.openstack.nodes.KeyPair
  #     properties:
  #       use_external_resource: { get_input: use_existing_agent_keypair }
  #       resource_id: { get_input: agent_public_key_name }
  #       private_key_path: { get_input: agent_private_key_path }


  VMHost:
    type: onevm.nodes.MonitoredServer
    properties:
      image_id: { get_input: image }
      instance_type: { get_input: size }
    relationships:
      - type: cloudify.aws.relationships.instance_connected_to_security_group
        target: mongod_security_group
  server_sc:
    type: cloudify.nodes.SoftwareComponent
    relationships:
      - type: cloudify.relationships.contained_in
        target: VMHost
    interfaces:
     cloudify.interfaces.lifecycle:
        start: scripts/start-web.sh


outputs:
    server_endpoint:
        description: ip
        value:
            serverip: { get_attribute: [VMHost, ip] }
